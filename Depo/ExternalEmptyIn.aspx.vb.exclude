Imports System.Drawing
Imports System.Data
Imports HRRecruitment.MyConnection
Imports System.Data.SqlClient

Partial Class Summary_BCYMovement
    Inherits System.Web.UI.Page
    Dim strSql As String
    Dim dt, dt1 As DataTable
    Dim db As New dbOperation_Depo
    Dim ds As DataSet
    Dim AccountID, AccountIDView As String
    Dim ed As New clsEncodeDecode
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        'If Session("UserIDPRE_Bond") Is Nothing Then
        '    Session("UserIDPRE_Bond") = Request.Cookies("UserIDPRE_Bond").Value
        '    'Session("Dept") = Request.Cookies("Dept").Value
        '    Session("UserNamePRE_Bond") = Request.Cookies("UserNamePRE_Bond").Value
        '    ''Session("PROFILEURL") = Request.Cookies("PROFILEURL").Value
        '    'Session("Location") = Request.Cookies("Location").Value
        '    ''Session("LOcationId") = Request.Cookies("LOcationId").Value
        '    'Session("ID") = Response.Cookies("ID").Value
        '    'Session("CompID") = Response.Cookies("CompID").Value
        '    'Session("Workyear") = Response.Cookies("Workyear").Value
        'End If
        If Not IsPostBack Then
            Filldropdown()
            'txtAllotmentDate.Text = Convert.ToDateTime(Now).ToString("yyyy-MM-ddTHH:mm")
        End If
    End Sub
    Protected Sub Filldropdown()
        Try           
            strSql = ""
            strSql = "SELECT DISTINCT agid, agname FROM customer where isactive=1 order by agname asc"
            dt = db.sub_GetDatatable(strSql)
            'ddlOnaccount.DataSource = dt
            'ddlOnaccount.DataTextField = "agname"
            'ddlOnaccount.DataValueField = "agid"
            'ddlOnaccount.DataBind()
            'ddlOnaccount.Items.Insert(0, New ListItem("All", 0))
        Catch ex As Exception
            lblError.Text = "Error in procedure: " & Reflection.MethodBase.GetCurrentMethod.Name & ". " & ex.Message.ToString
        End Try
    End Sub
    Public Function Encrypt(clearText As String) As String
        Return ed.Encrypt(clearText)
    End Function
    Protected Sub btnSave_Click(sender As Object, e As EventArgs)
        Try
            'artupScript(Me, Me.GetType(), "myModalforupdate", "$('#myModalforupdate').modal();", True)
            'UpdatePanel3.Update()
        Catch ex As Exception
            lblError.Text = "Error in procedure: " & Reflection.MethodBase.GetCurrentMethod.Name & ". " & ex.Message.ToString
        End Try
    End Sub
    Protected Sub btnIndentItem_Click(sender As Object, e As EventArgs)
        Try
            strSql = ""
            strSql += "select *  from Temp_Empty_Booking_Export where userid='" & Session("UserId_DepoCFS") & "'"
            dt = db.sub_GetDatatable(strSql)
            If dt.Rows.Count > 0 Then
                txtbookingNo.Text = Trim(dt.Rows(0)("BookingNo") & "")

            End If
            Call txtBookingNo_TextChanged(sender, e)
        Catch ex As Exception
            lblError.Text = "Error in procedure: " & Reflection.MethodBase.GetCurrentMethod.Name & ". " & ex.Message.ToString
        End Try
    End Sub
    Protected Sub btnshow_Click(sender As Object, e As EventArgs)
        Try
            
        Catch ex As Exception
            lblError.Text = "Error in procedure: " & Reflection.MethodBase.GetCurrentMethod.Name & ". " & ex.Message.ToString
        End Try
    End Sub

    Protected Sub txtBookingNo_TextChanged(sender As Object, e As EventArgs)
        'Try
        '    strSql = ""
        '    strSql = "exec usp_booking_Export_search '" & Trim(txtBookingNo.Text & "") & "'"
        '    dt = db.sub_GetDatatable(strSql)
        '    If dt.Rows.Count > 0 Then
        '        'txtBookingNo.Text = Trim(dt.Rows(0)("ENTRYID") & "")
        '        ddlOnaccount.SelectedValue = Val(dt.Rows(0)("agencyID") & "")
        '        'lblbksize.Text = Trim(dt.Rows(0)("size") & "")
        '        'lblbktype.Text = Trim(dt.Rows(0)("containertypeid") & "")
        '        lblbkslid.Text = Trim(dt.Rows(0)("SLID") & "")
        '        txtpod.Text = Trim(dt.Rows(0)("POD") & "")
        '        txtAllotmentID.Text = Trim(dt.Rows(0)("Gate Allow ID") & "")
        '    End If
        'Catch ex As Exception
        '    lblError.Text = "Error in procedure: " & Reflection.MethodBase.GetCurrentMethod.Name & ". " & ex.Message.ToString
        'End Try
    End Sub
End Class
